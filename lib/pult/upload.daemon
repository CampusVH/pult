#!/bin/bash

debug=true

module_name="$1"
channel="$2"
module_daemon_port="$3"
img_title="$4"
ptr_filename="$5"
b64_filename="$6"
lock_filename="$7"
upload_filename="$8"

ptr_title="xteddy"
ptr_offset_x="2"
ptr_offset_y="2"

. "/usr/local/etc/pult/pult.conf"
. "/usr/local/lib/pult/pult.functions"

pointer_windowid=""

cleanup ()
{
  rm -rf "$b64_filename" "$lock_filename"
  if [ -n "$(jobs -p)" ]; then
    kill $(jobs -p)
  fi
}

trap cleanup exit;

shopt -s lastpipe

nc.openbsd -l "$module_daemon_port" | \
  while read cmd param_x param_y; do
    echo "cmd = $cmd, param_x = $param_x, param_y = $param_y"
    if [ "$cmd" = "pointer" ]; then
      if [ -n "$param_x" ] && [ -n "$param_y" ]; then
        echo "Updating pointer ..."
        x0="0"
        y0="0"
        xx=$((x0 + param_x - ptr_offset_x))
        yy=$((y0 + param_y - ptr_offset_y))
        if [ -n "$pointer_windowid" ]; then
          xdotool windowraise "$pointer_windowid" windowmove "$pointer_windowid" "$xx" "$yy"
        else
          (/usr/games/xteddy -geometry +$xx+$yy -f "$ptr_filename") &
          pointer_pid="$!"
          while [ -z "$pointer_windowid" ]; do
            sleep 0.1
            pointer_windowid=$(xwininfo -root -children \
                               | grep -m 1 "$ptr_title" \
                               | awk '{ print $1; }')
          done
        fi
        echo "pointer_windowid = $pointer_windowid"
        echo "... done."
      fi
    elif [ "$cmd" = "screenshot" ]; then
      echo "Receiving screenshot data $b64_filename ..."
      rm -rf "$b64_filename"
      touch "$lock_filename"
      read line
      while [ -n "$line" ]; do
        echo "$line" >> "$b64_filename"
        read line
      done
      sync
      echo "... done. Processing image ..."
      cat "$b64_filename" | base64 -d > "$upload_filename"
      rm -rf "$b64_filename" "$lock_filename"
      echo "... done."
    fi
  done
